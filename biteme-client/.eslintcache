[{"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/index.js":"1","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/reportWebVitals.js":"2","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Router/router.js":"3","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Home.js":"4","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/GameForm3.js":"5","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Game.js":"6","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Register.js":"7","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/LogIn.js":"8","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/GameForm.js":"9","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Map.js":"10","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Timer.js":"11","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Footer.js":"12","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Logo.js":"13","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Navbar.js":"14","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/CardsListing.js":"15","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/RestaurantCard.js":"16","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/UserContext.js":"17","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/App.js":"18"},{"size":548,"mtime":1613069516665,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1611733030995,"results":"21","hashOfConfig":"20"},{"size":715,"mtime":1613069616689,"results":"22","hashOfConfig":"20"},{"size":5113,"mtime":1613056835110,"results":"23","hashOfConfig":"20"},{"size":21990,"mtime":1612972238397,"results":"24","hashOfConfig":"20"},{"size":2687,"mtime":1612972238396,"results":"25","hashOfConfig":"20"},{"size":3248,"mtime":1612972238399,"results":"26","hashOfConfig":"20"},{"size":2384,"mtime":1613071956556,"results":"27","hashOfConfig":"20"},{"size":17755,"mtime":1613070473417,"results":"28","hashOfConfig":"20"},{"size":714,"mtime":1611738146781,"results":"29","hashOfConfig":"20"},{"size":743,"mtime":1612816499470,"results":"30","hashOfConfig":"20"},{"size":2460,"mtime":1612903127943,"results":"31","hashOfConfig":"20"},{"size":544,"mtime":1612903127947,"results":"32","hashOfConfig":"20"},{"size":1679,"mtime":1613072057800,"results":"33","hashOfConfig":"20"},{"size":547,"mtime":1613052565580,"results":"34","hashOfConfig":"20"},{"size":2342,"mtime":1613052902158,"results":"35","hashOfConfig":"20"},{"size":87,"mtime":1613062805813,"results":"36","hashOfConfig":"20"},{"size":548,"mtime":1613070610683,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m5vhxx",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/index.js",[],"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/reportWebVitals.js",[],["83","84"],"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Router/router.js",["85"],"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Home.js",["86"],"import React, { Component } from \"react\";\nimport Footer from './Footer';\nimport MapContainer from './Map';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Logo from './Logo';\nimport ButtonAppBar from './Navbar';\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport CardsListing from './CardsListing';\n\nclass Home extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          inputField : \"\",\n          rests_data: []\n        }\n        this.logout = this.logout.bind(this);\n        this.sendRest = this.sendRest.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\n        this.handleSelectClick = this.handleSelectClick.bind(this);\n    }\n\n    logout = () => {\n      Axios({\n        method: \"GET\",\n        withCredentials: true,\n        url: \"http://localhost:4000/api/user/logout\",\n    }).then((res) => {\n        if(res.data.msg === \"User logged-out\"){\n            window.location = '/login';\n        }\n        else{ \n            window.location = '/';\n        }\n    });\n    }\n\n    handleChange(event) {\n      this.setState({inputField: event.target.value});\n      console.log(this.state.inputField);\n    }\n\n    handleDeleteClick = (e) => {\n      const newRests = this.state.rests_data.filter(\n        (rest) => rest.place_id !== e\n      );\n      this.setState({\n        rests_data: newRests\n    })\n    };\n\n    handleSelectClick = (e) => {\n      console.log(\"Returning data - \",e)\n      const rest = this.state.rests_data.filter((rest) => rest.place_id === e);\n      console.log(\"Hey there mama - \",rest);\n      if(rest !== null){\n        Axios({\n          method: \"POST\",\n          data: {\n            //user_id: userId,\n            restaurant_id: rest.place_id,\n            },\n          withCredentials: false,\n          url: `http://localhost:4000/api/order`\n        }).then((res)=> {\n\n        }).catch((err) => {\n\n        })\n      } else {\n        console.log(\"Issue occurred while trying to send the selected restaurant!\");\n      }\n    }\n\n    sendRest = (e) => {\n      if (this.state.rests_data.length < 4) {\n      Axios({\n        method: \"GET\",\n        withCredentials: false,\n        url: `http://localhost:4000/api/restaurantAPI?restName=${this.state.inputField}` //`https://bite-me-app1.herokuapp.com/api/restaurantAPI?restName=${this.state.inputField}`,\n    }).then((res) => {\n        if(res.status === 200 && res.data.candidates[0].opening_hours.open_now !== null){\n            console.log(\"The datda is - \",(res.data));\n            let myArr= [...this.state.rests_data]\n              myArr.push(res.data.candidates[0])\n              console.log(myArr);\n              this.setState({\n                rests_data: myArr\n            })\n            //this.setState({ rests_data: [...this.state.rests_data, res.data.candidates[0]] });\n            console.log(this.state.rests_data);\n        }\n        else{ \n            alert(\"Something wrong happened! \\nStatus - \", res.status);\n        }\n        \n    }).catch((err) => {\n      alert(`You've entered a bad restaurant name, '${this.state.inputField}' does not exist 😖, try again!`);\n      console.log(\"Error with bringing the restaurant you chose 😖 \", err);\n    });\n    }else {\n      alert(\"The maximum number of restautrants are 4! 😇\");\n    }}\n\n      render() {\n          return(\n              <>\n              <ButtonAppBar/>\n              <Logo/>\n              {/* <button onClick={this.logout}>Logout</button> */}\n              <div className=\"home-content\">\n              <Grid container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\">\n              <Grid item xl></Grid>\n              <Grid item xl={8}>\n                <h1 style={{marginTop: '5%'}}><strong>FULFILL YOUR DESIRE</strong></h1>\n                  <Grid>\n                    <form style={{justifyContent: 'center', textAlign: 'center'}}> \n                      <input type=\"text\" style={{backgroundColor:'white', width: '70%', height: '40px', marginTop: '3%', borderRadius:'15px', paddingLeft: '2%'}} onChange={this.handleChange}  placeholder=\"  Enter restaurant...\" />\n                      <Button variant=\"contained\" onClick={this.sendRest} color=\"primary\" style={{width:'10%', height:'40px', marginLeft: '0.9%', borderRadius:'15px'}}><b>Search</b></Button>\n                      {this.state.rests_data.length === 0 && (<h2 style={{ paddingTop: 10, textAlign: 'center' }}>No Restaurants to show</h2>)} \n                      <CardsListing rests={this.state.rests_data} onDelete={this.handleDeleteClick} onSelect={this.handleSelectClick}/>\n                    </form>\n                  </Grid>\n              </Grid>\n            </Grid>\n            </div>\n          <MapContainer/>\n              <Grid style={{backgroundImage: `url('./../Images/background3\\ copy.jpg')`, paddingTop:'0.3%'}}>\n              <h1 style={{justifyContent: 'center', textAlign: 'center'}}>LET THE FUN BEGIN</h1>\n              </Grid>\n          <Footer/>\n          </>\n          )\n    }\n}\n\nexport default Home;","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/GameForm3.js",["87","88","89","90","91","92","93","94","95"],"import React, { useState } from \"react\";\nimport Footer from './Footer';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Logo from './Logo';\nimport Axios from \"axios\";\nimport Navbar from './Navbar';\nimport \"./App.css\";\n\nconst GameForm = () => {\n    let num = 0;\n    let quest = \"\";\n    let anst1 = \"\";\n    let anst2 = \"\";\n    let anst3 = \"\";\n    let anst4 = \"\";\n    let btnValue = \"\";\n    const [currentStep, setCurrentStep] = useState(0);\n    const [question1, setQuestion1] = useState('');\n    const [ready, setReady] = useState(false);\n    const [answer11, setAnswer11] = useState('');\n    const [answer12, setAnswer12] = useState('');\n    const [answer13, setAnswer13] = useState('');\n    const [answer14, setAnswer14] = useState('');\n\n    const [choose11, setChoose11] = useState(false);\n    const [choose12, setChoose12] = useState(false);\n    const [choose13, setChoose13] = useState(false);\n    const [choose14, setChoose14] = useState(false);\n    // Button value state\n    const [buttonValue1, setButtonValue1] = useState(\"\");\n    // Game duration state\n    const [durationss, setDuration] = useState(0);\n\n    // Game state\n    const [questionNum1, setQuestionNum1] = useState({});\n    const [questionNum2, setQuestionNum2] = useState({});\n    const [questionNum3, setQuestionNum3] = useState({});\n    const [questionNum4, setQuestionNum4] = useState({});\n    const [questionNum5, setQuestionNum5] = useState({});\n\n\n    const gameForEntry = [];\n\n    async function sendForm(e) {\n        const game = {\n            duration: durationss,\n            game: [questionNum1, questionNum2, questionNum3, questionNum4, questionNum5],\n        };\n\n        console.log(game);\n        Axios({\n            method: \"POST\",\n            data: {\n                game: game\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/api/game\",\n        }).then((res) => {\n            if (res.status === 200) {\n                window.location = '/home';\n            }\n        }).catch(err => console.log(err));\n    }\n\n    const inputChange = (info) => {\n        let { name, value, value1 } = info.target;\n        console.log(name, value, value1);\n        console.log(this.state);\n    }\n\n    // Entering duration (First step) \n    const durationClick = (e) => {\n        setDuration(num);\n        setCurrentStep(currentStep + 1);\n    }\n\n    async function checkRadioButtons(e) {\n        if (btnValue !== '' && quest !== '' && anst1 !== '' && anst2 !== '' && anst3 !== '' && anst4 !== '') {\n            console.log(\"In checkRadioButtons - \", btnValue.length, \"C\".length, quest, anst1, anst2, anst3, anst4)\n            setButtonValue1(btnValue);\n            setChoose11(btnValue == \"A\");\n            setChoose12(btnValue == \"B\");\n            setChoose13(btnValue == \"C\");\n            setChoose14(btnValue == \"D\");\n            setQuestion1(quest);\n            setAnswer11(anst1);\n            setAnswer12(anst2);\n            setAnswer13(anst3);\n            setAnswer14(anst4);\n            console.log(\"In CheckRadioButtons1 - \", buttonValue1, question1, answer11, answer12, answer13, answer14);\n            setReady(true);\n        } else { console.log(\"Trying to enter empty strings!\") }\n        return;\n    };\n\n    async function onClickQuestion() {\n        await checkRadioButtons();\n        if (ready) {\n            if (question1 && answer11 && answer12 && answer13 && answer14) {\n\n                const q = {\n                    question: question1,\n                    options: [\n                        {\n                            answer: answer11,\n                            isCorrect: choose11\n                        },\n                        {\n                            answer: answer12,\n                            isCorrect: choose12\n                        },\n                        {\n                            answer: answer13,\n                            isCorrect: choose13\n                        },\n                        {\n                            answer: answer14,\n                            isCorrect: choose14\n                        }]\n                }\n\n                if (currentStep === 1) {\n                    setQuestionNum1(q);\n                    setCurrentStep(currentStep + 1);\n                }\n                if (currentStep === 2) {\n                    setQuestionNum2(q);\n                    setCurrentStep(currentStep + 1);\n                }\n                if (currentStep === 3) {\n                    setQuestionNum3(q);\n                    setCurrentStep(currentStep + 1);\n                }\n                if (currentStep === 4) {\n                    setQuestionNum4(q);\n                    setCurrentStep(currentStep + 1);\n                }\n                if (currentStep === 5) {\n                    setQuestionNum5(q);\n                    setCurrentStep(currentStep + 1);\n                }\n                console.log(questionNum1, questionNum2, questionNum3, questionNum4, questionNum5);\n\n                setReady(false);\n            } else {\n                alert(\"Fill all field!\");\n            };\n        }\n    }\n\n    const Step0 = (props) => {\n        if (currentStep !== 0) {\n            return null\n        }\n        return (\n            <>\n                <div style={{ height: '400px', marginTop: '30%' }}>\n                    <Grid container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\">\n                        <label style={{ fontSize: '20px' }}>Game Duration: </label>\n                        <form >\n                            <TextField container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\"\n                                id=\"filled-number\"\n                                label=\"minutes\"\n                                type=\"number\"\n                                style={{ width: '100%' }}\n                                onChange={(e) => num = e.target.value}\n                                inputProps={{ min: \"5\", max: \"15\", step: \"1\" }}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"filled\"\n                            />\n                            <Button variant=\"contained\" color=\"primary\" onClick={durationClick} style={{ width: '10%', height: '40px', marginBottom: '10%', marginLeft: '24%', marginTop: '10%', borderRadius: '15px' }}><b>NEXT</b></Button>\n                        </form>\n                    </Grid>\n                </div>\n            </>\n        )\n    }\n\n    const Step1 = (props) => {\n\n        if (currentStep !== 1) {\n            return null\n        }\n        return (\n            <div style={{ height: '400px' }}>\n                <Grid container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\">\n                    <form>\n                        <label>Question {currentStep}: </label>\n                        <TextField type=\"text\" name='question1' onChange={(e) => quest = e.target.value} style={{ backgroundColor: 'white', width: '80%', height: '25px' }} placeholder=\"Highest building in the world..\" />\n                        <div style={{ marginTop: '3%' }}>\n                            <label>Answer A: </label>\n                            <TextField style={{ height: '25px' }} name='answer1' onChange={(e) => anst1 = e.target.value} placeholder=\"text\" />\n                            <label>Answer B: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst2 = e.target.value} />\n                            <label>Answer C: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst3 = e.target.value} />\n                            <label>Answer D: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst4 = e.target.value} />\n                        </div>\n                        <FormControl style={{ marginTop: '1%' }} component=\"fieldset\">\n                            <InputLabel id=\"Gender\">Answer{currentStep}</InputLabel>\n                            <Select\n                                labelId=\"Gender\"\n                                id=\"Gender\"\n                                defaultValue={\"A\"}\n                                onChange={e => btnValue = e.target.value}\n                                fullWidth\n                            >\n                                <MenuItem value={\"A\"}>A</MenuItem>\n                                <MenuItem value={\"B\"}>B</MenuItem>\n                                <MenuItem value={\"C\"}>C</MenuItem>\n                                <MenuItem value={\"D\"}>D</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={onClickQuestion} style={{ alignContent: 'center', width: '10%', height: '40px', marginBottom: '10%', borderRadius: '15px', marginTop: '8%' }}><b>NEXT</b></Button>\n                    </form>\n                </Grid>\n            </div>\n        )\n    }\n    const Step2 = (props) => {\n        if (currentStep !== 2) {\n            return null\n        }\n        return (\n            <div style={{ height: '400px' }}>\n                <Grid container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\">\n                    <form>\n                        <label>Question {currentStep}: </label>\n                        <TextField type=\"text\" name='question1' onChange={(e) => quest = e.target.value} style={{ backgroundColor: 'white', width: '80%', height: '25px' }} placeholder=\"Highest building in the world..\" />\n                        <div style={{ marginTop: '3%' }}>\n                            <label>Answer A: </label>\n                            <TextField style={{ height: '25px' }} name='answer1' onChange={(e) => anst1 = e.target.value} placeholder=\"text\" />\n                            <label>Answer B: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst2 = e.target.value} />\n                            <label>Answer C: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst3 = e.target.value} />\n                            <label>Answer D: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst4 = e.target.value} />\n                        </div>\n                        <FormControl style={{ marginTop: '1%' }} component=\"fieldset\">\n                            <InputLabel id=\"Gender\">Answer{currentStep}</InputLabel>\n                            <Select\n                                labelId=\"Gender\"\n                                id=\"Gender\"\n                                defaultValue={\"A\"}\n                                onChange={e => btnValue = e.target.value}\n                                fullWidth\n                            >\n                                <MenuItem value={\"A\"}>A</MenuItem>\n                                <MenuItem value={\"B\"}>B</MenuItem>\n                                <MenuItem value={\"C\"}>C</MenuItem>\n                                <MenuItem value={\"D\"}>D</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={onClickQuestion} style={{ alignContent: 'center', width: '10%', height: '40px', marginBottom: '10%', borderRadius: '15px', marginTop: '8%' }}><b>NEXT</b></Button>\n                    </form>\n                </Grid>\n            </div>\n        )\n    }\n    const Step3 = (props) => {\n        if (currentStep !== 3) {\n            return null\n        }\n        return (\n            <div style={{ height: '400px' }}>\n                <Grid container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\">\n                    <form>\n                        <label>Question {currentStep}: </label>\n                        <TextField type=\"text\" name='question1' onChange={(e) => quest = e.target.value} style={{ backgroundColor: 'white', width: '80%', height: '25px' }} placeholder=\"Highest building in the world..\" />\n                        <div style={{ marginTop: '3%' }}>\n                            <label>Answer A: </label>\n                            <TextField style={{ height: '25px' }} name='answer1' onChange={(e) => anst1 = e.target.value} placeholder=\"text\" />\n                            <label>Answer B: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst2 = e.target.value} />\n                            <label>Answer C: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst3 = e.target.value} />\n                            <label>Answer D: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst4 = e.target.value} />\n                        </div>\n                        <FormControl style={{ marginTop: '1%' }} component=\"fieldset\">\n                            <InputLabel id=\"Gender\">Answer{currentStep}</InputLabel>\n                            <Select\n                                labelId=\"Gender\"\n                                id=\"Gender\"\n                                defaultValue={\"A\"}\n                                onChange={e => btnValue = e.target.value}\n                                fullWidth\n                            >\n                                <MenuItem value={\"A\"}>A</MenuItem>\n                                <MenuItem value={\"B\"}>B</MenuItem>\n                                <MenuItem value={\"C\"}>C</MenuItem>\n                                <MenuItem value={\"D\"}>D</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={onClickQuestion} style={{ alignContent: 'center', width: '10%', height: '40px', marginBottom: '10%', borderRadius: '15px', marginTop: '8%' }}><b>NEXT</b></Button>\n                    </form>\n                </Grid>\n            </div>\n        )\n    }\n\n    const Step4 = (props) => {\n        if (currentStep !== 4) {\n            return null\n        }\n        return (\n            <div style={{ height: '400px' }}>\n                <Grid container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\">\n                    <form>\n                        <label>Question {currentStep}: </label>\n                        <TextField type=\"text\" name='question1' onChange={(e) => quest = e.target.value} style={{ backgroundColor: 'white', width: '80%', height: '25px' }} placeholder=\"Highest building in the world..\" />\n                        <div style={{ marginTop: '3%' }}>\n                            <label>Answer A: </label>\n                            <TextField style={{ height: '25px' }} name='answer1' onChange={(e) => anst1 = e.target.value} placeholder=\"text\" />\n                            <label>Answer B: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst2 = e.target.value} />\n                            <label>Answer C: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst3 = e.target.value} />\n                            <label>Answer D: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst4 = e.target.value} />\n                        </div>\n                        <FormControl style={{ marginTop: '1%' }} component=\"fieldset\">\n                            <InputLabel id=\"Gender\">Answer{currentStep}</InputLabel>\n                            <Select\n                                labelId=\"Gender\"\n                                id=\"Gender\"\n                                defaultValue={\"A\"}\n                                onChange={e => btnValue = e.target.value}\n                                fullWidth\n                            >\n                                <MenuItem value={\"A\"}>A</MenuItem>\n                                <MenuItem value={\"B\"}>B</MenuItem>\n                                <MenuItem value={\"C\"}>C</MenuItem>\n                                <MenuItem value={\"D\"}>D</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={onClickQuestion} style={{ alignContent: 'center', width: '10%', height: '40px', marginBottom: '10%', borderRadius: '15px', marginTop: '8%' }}><b>NEXT</b></Button>\n                    </form>\n                </Grid>\n            </div>\n        )\n    }\n\n    const Step5 = (props) => {\n        if (currentStep !== 5) {\n            return null\n        }\n        return (\n            <div style={{ height: '400px' }}>\n                <Grid container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\">\n                    <form>\n                        <label>Question {currentStep}: </label>\n                        <TextField type=\"text\" name='question1' onChange={(e) => quest = e.target.value} style={{ backgroundColor: 'white', width: '80%', height: '25px' }} placeholder=\"Highest building in the world..\" />\n                        <div style={{ marginTop: '3%' }}>\n                            <label>Answer A: </label>\n                            <TextField style={{ height: '25px' }} name='answer1' onChange={(e) => anst1 = e.target.value} placeholder=\"text\" />\n                            <label>Answer B: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst2 = e.target.value} />\n                            <label>Answer C: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst3 = e.target.value} />\n                            <label>Answer D: </label>\n                            <TextField style={{ height: '25px' }} placeholder=\"text\" onChange={(e) => anst4 = e.target.value} />\n                        </div>\n                        <FormControl style={{ marginTop: '1%' }} component=\"fieldset\">\n                            <InputLabel id=\"Gender\">Answer{currentStep}</InputLabel>\n                            <Select\n                                labelId=\"Gender\"\n                                id=\"Gender\"\n                                defaultValue={\"A\"}\n                                onChange={e => btnValue = e.target.value}\n                                fullWidth\n                            >\n                                <MenuItem value={\"A\"}>A</MenuItem>\n                                <MenuItem value={\"B\"}>B</MenuItem>\n                                <MenuItem value={\"C\"}>C</MenuItem>\n                                <MenuItem value={\"D\"}>D</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={onClickQuestion} style={{ alignContent: 'center', width: '10%', height: '40px', marginBottom: '10%', borderRadius: '15px', marginTop: '8%' }}><b>NEXT</b></Button>\n                    </form>\n                </Grid>\n            </div>\n        )\n    }\n\n    const Step6 = (props) => {\n        if (currentStep !== 6) {\n            return null\n        }\n        return (\n            <>\n                <div style={{ height: '400px' }}>\n                    <Button variant=\"contained\" color=\"primary\" onClick={sendForm} style={{ alignContent: 'center', width: '10%', height: '40px', marginBottom: '10%', borderRadius: '15px', top: '10%' }}><b>CREATE</b></Button>\n                </div>\n            </>\n        )\n    }\n    return (\n        <>\n            <Navbar/>\n            <Logo />\n            <div className=\"home-content\" >\n                <Grid container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\">\n                    <h1>Add New Game</h1>\n                    <form>\n                        <Step0\n                            currentStep={currentStep}\n                        />\n                        <Step1\n                            currentStep={currentStep}\n                            handleChange={inputChange}\n                        />\n                        <Step2\n                            currentStep={currentStep}\n                            handleChange={inputChange}\n                        />\n                        <Step3\n                            currentStep={currentStep}\n                            handleChange={inputChange}\n                        />\n                        <Step4\n                            currentStep={currentStep}\n                            handleChange={inputChange}\n                        />\n                        <Step5\n                            currentStep={currentStep}\n                            handleChange={inputChange}\n                        />\n                        <Step6\n                            currentStep={currentStep}\n                            handleChange={inputChange}\n                        />\n                    </form>\n                </Grid>\n                <Footer />\n            </div>\n        </>\n    );\n}\n\n\nexport default GameForm;","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Game.js",["96","97","98"],"import React, { Component } from \"react\";\nimport { useState, useEffect } from 'react';\nimport Footer from './Footer';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Logo from './Logo';\nimport Axios from 'axios';\nimport Navbar from './Navbar';\nimport \"./App.css\";\nimport MyTimer from \"./Timer\";\n\nexport default function Game() {\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [datas, setDatas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [duration, setDuration] = useState(0);\n\n  useEffect(() => {\n    async function callApi() {\n      const res = await Axios.get(`http://localhost:4000/api/game/`);\n      const games = res?.data?.game;\n      setDuration(res?.data?.duration);\n      setDatas(games);\n      setLoading(false);\n    }\n    callApi();\n  }, []);\n\n  const handleAnswerOptionClick = (isCorrect) => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < datas.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n    <>\n      {!duration ? <h2>Loading</h2> :\n        <>\n        <Navbar />\n          <Logo />\n            <h2 style={{ textAlign: 'center', fontSize: '70px'}}>Time left<MyTimer duration={duration} /></h2>\n            <div className='app'>\n              {loading ? <h2>Loading</h2> :\n                <div style={{ width: '600px', marginBottom: '3%'}}>\n                  {showScore ? (\n                    <div className='score-section'>\n                      You scored {score} out of {datas.length}\n                    </div>\n                  ) : (\n                      <>\n                          <div className='question-section'>\n                            <div className='question-count'>\n                              <span>Question {currentQuestion + 1}/</span>{datas.length}\n                            </div>\n                            <div className='question-text'>{datas[currentQuestion].question}</div>\n                          </div>\n                          <div className='answer-section'>\n                            {datas[currentQuestion].options.map((option, i) => (\n                              <button className='ans_button' key={i} onClick={() => handleAnswerOptionClick(option.isCorrect)}>{option.answer}</button>\n                            ))}\n                          </div>\n                      </>\n                    )}</div>\n              }\n            </div>\n        </>}\n      <Footer />\n    </>\n  );\n}","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Register.js",["99","100","101"],"import React ,{ useState} from 'react';\nimport Footer from './Footer';\nimport Logo from './Logo';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Axios from 'axios';\nimport \"./App.css\";\nimport {Button} from '@material-ui/core';\n\n\nfunction Register (props) {\n    const [registerUsername, setRegisterUsername] = useState(\"\");\n    const [registerEmail, setRegisterEmail] = useState(\"\");\n    const [registerPassword, setRegisterPassword] = useState(\"\");\n\n    const register = () => {\n        if(registerEmail === '' || registerPassword === '' || registerUsername === ''){\n            alert(\"Please fill all fields\");\n        } else {\n        Axios({\n            method: \"POST\",\n            data: {\n            email: registerEmail,\n            username: registerUsername,\n            password: registerPassword,\n            },\n            withCredentials: true,\n            url: \"http://localhost:4000/api/user/register\",\n        }).then((res) => {\n            if(res.data.msg === \"User Already Exists\"){\n                window.location = '/';\n            }\n            else{            \n                window.location = '/';\n            }\n        });\n    }\n};       \n\n    return(\n            <div>\n                <Logo />\n                    <div className=\"home-content\">\n                        <Grid container alignItems=\"center\" justify=\"center\" spacing={0} direction=\"column\">\n                            <h1 style={{marginBottom:'2%'}}>Sign Up</h1>\n                            <div style={{width:'100%',display: 'block', textAlign: 'center'}}>\n                            <form style={{ display: 'inline-block'}}>\n                                <div style={{marginBottom:'5%', width:'300px'}}>\n                                    <TextField id=\"outlined-basic\" label=\"user\" type=\"text\" id=\"userLoginEmail\" variant=\"outlined\" onChange={(e) => setRegisterUsername(e.target.value)}/>\n                                </div>\n                                <div style={{marginBottom:'5%'}}>\n                                    <TextField id=\"outlined-basic\" label=\"Email\" id=\"userLoginEmail\" type=\"email\" variant=\"outlined\" onChange={(e) => setRegisterEmail(e.target.value)}/>\n                                </div>\n                                <div style={{marginBottom:'5%'}}>\n                                    <TextField id=\"outlined-password-input\" label=\"Password\" id=\"userLoginPassword\" type=\"password\" autoComplete=\"current-password\" variant=\"outlined\" onChange={(e) => setRegisterPassword(e.target.value)}/>\n                                </div>\n                                <Button onClick={register} variant=\"contained\" color=\"primary\" style={{marginBottom:'5%'}} ><b>Register Now</b></Button>\n                            </form>\n                            </div>\n                            <div style={{width:'100%',display: 'block', textAlign: 'center'}}>\n                            <a style={{marginTop:'1%', color:'black', fontSize:'15px'}}href='/'>Back to <strong>Login</strong></a>\n                            </div>\n                        </Grid>\n                    </div>\n                <Footer />\n            </div>    \n        )\n}\n\n export default Register;","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/LogIn.js",["102","103","104"],"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/GameForm.js",["105"],"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Map.js",["106"],"import React, {Component} from 'react';\nimport { Map, GoogleApiWrapper } from \"google-maps-react\";\n\nconst mapStyles = {\n    // width: '100%',\n    // height: '500px'\n  };\n\nexport class MapContainer extends Component {\n    render() {\n      return (\n        <div style={{position:'relative', width:'100%', height:'600px'}}>\n          <Map\n            google={this.props.google}\n            zoom={13}\n            style={{width:'100%', height:'600px', position:'relative'}}\n            initialCenter={{\n              lat: 32.0853,\n              lng: 34.7818\n            }}\n          />\n        </div>  \n    )}\n  }\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBkxP0uOzCNjtByiZD1KccRs7GFfKy_7ss\",\n})(MapContainer);","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Timer.js",["107","108","109"],"import { useState, useEffect } from 'react';\nimport {useTimer} from 'react-timer-hook';\nimport { duration } from '@material-ui/core';\n\nfunction MyTimer({ expiryTimestamp}) {\n    const {\n      seconds,\n      minutes\n    } = useTimer({ expiryTimestamp, onExpire: () => console.warn('onExpire called') });\n  \n    return (\n      <div style={{textAlign: 'center'}}>\n        <div style={{fontSize: '100px'}}>\n          <span>{minutes}</span>:<span>{seconds}</span>\n        </div>\n      </div>\n    );\n  }\n\n  export default function setTime({duration}) {\n    const time = new Date();\n    time.setSeconds(time.getSeconds() + (!duration ? 60: (60 * duration)));\n    return (\n      <div>\n        <MyTimer expiryTimestamp={time} />\n      </div>\n    );\n  }","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Footer.js",["110","111","112","113","114","115","116","117"],"import React, { Component } from \"react\";\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport \"./App.css\";\nimport Grid from '@material-ui/core/Grid';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div style={{position: 'relative', left:0, bottom:0, right:0}}>\n        <Grid container className=\"bg-footer\">\n            <Grid item md={2}></Grid>\n              <Grid item md={3}>\n                <div className=\"footer-top\">\n                  <h3>BiteMe 🍔 🥦</h3>\n                </div>\n                <div className=\"footer-list\">\n                  <ul>\n                    <li>\n                      <a href=\"#\">BiteMe Careers</a>\n                    </li>\n                    <li>\n                      <a href=\"#\">Kosher Website</a>\n                    </li>\n                    <li>\n                      <a href=\"#\">Contact Us</a>\n                    </li>\n                    <li>\n                      <a href=\"#\">FAQ'S</a>\n                    </li>\n                    <li>\n                      <a href=\"#\">How It Works?</a>\n                    </li>\n                  </ul>\n                </div>\n                </Grid>\n                <Grid item md={2}></Grid>\n              \n              <Grid item md={3}>\n                <div className=\"footer-top\">\n                  <h3>Connect 📞</h3>\n                </div>\n                <div className=\"footer-list\">\n                  <ul className=\"social\">\n                    <li>\n                      <a href=\"#\">\n                        <InstagramIcon/>\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#\">\n                        <FacebookIcon/>\n                      </a>\n                    </li>\n                    <li>\n                      <a href=\"#\">\n                        <TwitterIcon/>\n                      </a>\n                    </li>\n                  </ul>\n                  <ul>\n                    <li>\n                      <span>03-6432223, Tel-Aviv</span>\n                    </li>\n                    <li>\n                      <span>info@BiteMe.com</span>\n                    </li>\n                  </ul>\n                </div>\n                </Grid>\n                <Grid item md={2}></Grid>\n          </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Footer;","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Logo.js",[],"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/Navbar.js",[],"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/CardsListing.js",[],"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/RestaurantCard.js",["118","119","120"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Axios from \"axios\";\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: '30px',\n      maxHeight: '40%',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n  \n  // TODO THE CARD THING\n//   const sendChosenRestaurant = () => {\n//     Axios\n//         .post('')\n//         .then((response) => {console.log(response); res.json(response.data);})\n//         .catch(err => console.log(`Error is: ${err}`));\n// }\n\n  export default function RestaurantCard({data, onDelete, onSelect}) {\n    console.log(\"The data\",data);\n    const address = data.formatted_address;\n    const name = data.name;\n    const hours = data.opening_hours.open_now;\n    const id = data.place_id;\n    console.log(id)\n    const rating = data.rating;\n\n    const classes = useStyles();\n\n    function handleSelect() {\n      onSelect(id)\n    }\n\n    function handleDelete() {\n      onDelete(id)\n    }\n    return(\n    <>\n    <Card style={{marginTop: '3%',marginLeft:'1%', width:'190px', display:'inline-block', background: '#39CCCC', borderRadius:'15px', border: '1px #001f3f solid'}}>\n    <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n        Address: {address}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n        {name}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n        Open: {hours ? ' Yes' : ' No'}<br/>\n        Rating: {rating}\n        </Typography> \n    </CardContent>\n    <CardActions style={{justifyContent:'center', alignContent:'center'}}>\n        <Button size=\"large\" color=\"primary\" onClick={handleSelect}>select</Button>\n        <IconButton aria-label=\"delete\" onClick={handleDelete}>\n          <DeleteIcon fontSize=\"small\" />\n        </IconButton>\n      </CardActions>\n    </Card>\n    </>\n  )\n}\n","/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/UserContext.js",[],"/Users/ido/Documents/Shenkar Sofware Engineering/3RD/SEMSTER 1/DCS - Distributed Cloud Services/Assignments/BiteMe - Final Project/BiteMe-ClientSide/biteme-client/src/Components/App.js",[],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":131,"column":75,"nodeType":"131","messageId":"132","endLine":131,"endColumn":76,"suggestions":"133"},{"ruleId":"125","severity":1,"message":"134","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"135","line":6,"column":8,"nodeType":"127","messageId":"128","endLine":6,"endColumn":18},{"ruleId":"125","severity":1,"message":"136","line":7,"column":8,"nodeType":"127","messageId":"128","endLine":7,"endColumn":24},{"ruleId":"125","severity":1,"message":"137","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":17},{"ruleId":"125","severity":1,"message":"138","line":52,"column":11,"nodeType":"127","messageId":"128","endLine":52,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":91,"column":34,"nodeType":"141","messageId":"142","endLine":91,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":92,"column":34,"nodeType":"141","messageId":"142","endLine":92,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":93,"column":34,"nodeType":"141","messageId":"142","endLine":93,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":94,"column":34,"nodeType":"141","messageId":"142","endLine":94,"endColumn":36},{"ruleId":"125","severity":1,"message":"143","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":26},{"ruleId":"125","severity":1,"message":"144","line":4,"column":8,"nodeType":"127","messageId":"128","endLine":4,"endColumn":12},{"ruleId":"125","severity":1,"message":"145","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":14},{"ruleId":"146","severity":1,"message":"147","line":49,"column":93,"nodeType":"148","endLine":49,"endColumn":112},{"ruleId":"146","severity":1,"message":"147","line":52,"column":82,"nodeType":"148","endLine":52,"endColumn":101},{"ruleId":"146","severity":1,"message":"147","line":55,"column":94,"nodeType":"148","endLine":55,"endColumn":116},{"ruleId":"125","severity":1,"message":"149","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"150","line":5,"column":8,"nodeType":"127","messageId":"128","endLine":5,"endColumn":13},{"ruleId":"125","severity":1,"message":"151","line":7,"column":10,"nodeType":"127","messageId":"128","endLine":7,"endColumn":21},{"ruleId":"125","severity":1,"message":"152","line":213,"column":7,"nodeType":"127","messageId":"128","endLine":213,"endColumn":18},{"ruleId":"125","severity":1,"message":"153","line":4,"column":7,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"125","severity":1,"message":"149","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":18},{"ruleId":"125","severity":1,"message":"154","line":1,"column":20,"nodeType":"127","messageId":"128","endLine":1,"endColumn":29},{"ruleId":"125","severity":1,"message":"155","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":21,"column":23,"nodeType":"158","endLine":21,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":24,"column":23,"nodeType":"158","endLine":24,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":27,"column":23,"nodeType":"158","endLine":27,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":30,"column":23,"nodeType":"158","endLine":30,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":33,"column":23,"nodeType":"158","endLine":33,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":47,"column":23,"nodeType":"158","endLine":47,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":52,"column":23,"nodeType":"158","endLine":52,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":57,"column":23,"nodeType":"158","endLine":57,"endColumn":35},{"ruleId":"125","severity":1,"message":"149","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"154","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":36},{"ruleId":"125","severity":1,"message":"150","line":9,"column":8,"nodeType":"127","messageId":"128","endLine":9,"endColumn":13},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'GameForm' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\ .","TemplateElement","unnecessaryEscape",["161","162"],"'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'gameForEntry' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'Axios' is defined but never used.","'UserContext' is defined but never used.","'inputChange' is assigned a value but never used.","'mapStyles' is assigned a value but never used.","'useEffect' is defined but never used.","'duration' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"messageId":"163","fix":"164","desc":"165"},{"messageId":"166","fix":"167","desc":"168"},"removeEscape",{"range":"169","text":"170"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"171","text":"172"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[4877,4878],"",[4877,4877],"\\"]